<s:ChromelessWindow
    x:Class="CompteEstBon.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CompteEstBon"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="http://schemas.syncfusion.com/wpf"
    xmlns:skin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    x:Name="chromelessWindow"
    Title="{Binding Titre}"
    skin:SfSkinManager.VisualStyle="MaterialDark"
    BorderThickness="0"
    FontSize="10"
    Icon="images/favicon.png"
    TitleBarForeground="{DynamicResource TextForegroundBrush}"
    TitleTextAlignment="Center"
    Top="6"
    UseNativeChrome="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <s:ChromelessWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/Common/Brushes.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="TextForegroundBrush" Color="{Binding Foreground}" />
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <DataTemplate x:Key="listboxOperations">
                <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                <ListBox
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    ItemsSource="{Binding Operations}"
                    KeyboardNavigation.DirectionalNavigation="Continue"
                    PreviewMouseWheel="ListBox_PreviewMouseWheel"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Style="{DynamicResource TextCellGrid}" Text="{Binding}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DataTemplate>
            <Style
                x:Key="ComboPlaqueStyle"
                BasedOn="{StaticResource {x:Type ComboBox}}"
                TargetType="ComboBox">
                <Setter Property="IsEditable" Value="True" />
                <Setter Property="ItemsSource" Value="{x:Static local:ViewTirage.ListePlaques}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type s:VirtualizingCellsControl}">
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
            </Style>
            <Style x:Key="TextCellGrid" TargetType="TextBlock">
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
                <Setter Property="FontWeight" Value="ExtraLight" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type StatusBarItem}}" TargetType="{x:Type StatusBarItem}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="BorderBrush" Value="White" />
                <Setter Property="BorderThickness" Value="0.2" />
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
            </Style>
        </ResourceDictionary>
    </s:ChromelessWindow.Resources>
    <s:ChromelessWindow.DataContext>
        <local:ViewTirage x:Name="ViewTirage" />
    </s:ChromelessWindow.DataContext>
    <s:ChromelessWindow.InputBindings>
        <KeyBinding
            Key="H"
            Command="{Binding}"
            CommandParameter="random"
            CommandTarget="{Binding ElementName=btnHasard}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="R"
            Command="{Binding}"
            CommandParameter="resolve"
            CommandTarget="{Binding ElementName=btnResoudre}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="X"
            Command="{Binding}"
            CommandParameter="export"
            CommandTarget="{Binding ElementName=btnExport}"
            Modifiers="Ctrl" />
    </s:ChromelessWindow.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition Width="75" />
        </Grid.ColumnDefinitions>
        <Label
            x:Name="label"
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="7"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            BorderThickness="0"
            Content="Plaques" />
        <Border
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="7"
            BorderThickness="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ComboBox
                    x:Name="Plaque1"
                    Grid.Column="0"
                    Style="{StaticResource ComboPlaqueStyle}"
                    TabIndex="0"
                    Text="{Binding Plaques[0], Mode=TwoWay}" />
                <ComboBox
                    x:Name="Plaque2"
                    Grid.Column="1"
                    Style="{StaticResource ComboPlaqueStyle}"
                    TabIndex="1"
                    Text="{Binding Plaques[1], Mode=TwoWay}" />
                <ComboBox
                    x:Name="Plaque3"
                    Grid.Column="2"
                    Style="{StaticResource ComboPlaqueStyle}"
                    TabIndex="2"
                    Text="{Binding Plaques[2], Mode=TwoWay}" />
                <ComboBox
                    x:Name="Plaque4"
                    Grid.Column="3"
                    Style="{StaticResource ComboPlaqueStyle}"
                    TabIndex="3"
                    Text="{Binding Plaques[3], Mode=TwoWay}" />
                <ComboBox
                    x:Name="Plaque5"
                    Grid.Column="4"
                    Style="{StaticResource ComboPlaqueStyle}"
                    TabIndex="4"
                    Text="{Binding Plaques[4], Mode=TwoWay}" />
                <ComboBox
                    x:Name="Plaque6"
                    Grid.Column="5"
                    Style="{StaticResource ComboPlaqueStyle}"
                    TabIndex="5"
                    Text="{Binding Plaques[5], Mode=TwoWay}" />
            </Grid>
        </Border>
        <Label
            Grid.Row="0"
            Grid.Column="7"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            BorderThickness="0"
            Content="Cherche" />
        <s:UpDown
            x:Name="Search"
            Grid.Row="1"
            Grid.Column="7"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            IsTabStop="True"
            MaxValidation="OnLostFocus"
            MaxValue="999"
            MinValidation="OnLostFocus"
            MinValue="0"
            NumberDecimalDigits="0"
            TabIndex="6"
            TextAlignment="Center"
            Value="{Binding Search, Mode=TwoWay}" />
        <Button
            x:Name="btnResoudre"
            Grid.Row="0"
            Grid.Column="8"
            Grid.ColumnSpan="2"
            Command="{Binding}"
            CommandParameter="resolve"
            Foreground="{Binding Foreground}"
            IsTabStop="True"
            TabIndex="7"
            ToolTipService.ToolTip="Lancement résolution (Ctrl+R)">
            <StackPanel Orientation="Horizontal">
                <Image
                    Width="16"
                    Height="16"
                    HorizontalAlignment="Left"
                    Source="images/exec.png" />
                <TextBlock
                    Padding="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="Résoudre"
                    TextWrapping="Wrap" />
            </StackPanel>
        </Button>
        <Button
            x:Name="btnHasard"
            Grid.Row="1"
            Grid.Column="8"
            Command="{Binding}"
            CommandParameter="random"
            IsTabStop="True"
            TabIndex="8"
            ToolTipService.ToolTip="Lancement tirage (Ctrl+H)">
            <StackPanel Orientation="Horizontal">
                <Image
                    Width="16"
                    Height="16"
                    HorizontalAlignment="Left"
                    Source="images/random.png" />
                <TextBlock
                    Padding="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="Tirage" />
            </StackPanel>
        </Button>
        <Button
                x:Name="btnExport"
                Grid.Row="1"
                Grid.Column="9"
                Grid.ColumnSpan="2"
                Command="{Binding}"
                CommandParameter="export"
                IsTabStop="True"
                TabIndex="9"
                ToolTipService.ToolTip="Export Excel (Ctrl+X)">
            <Image
                    Width="16"
                    Height="16"
                    HorizontalAlignment="Left"
                    Source="images/excel.png" />

        </Button>
        <s:SfDataGrid
            x:Name="SolutionsData"
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="10"
            x:FieldModifier="public"
            AllowFiltering="False"
            AllowGrouping="False"
            AllowSorting="False"
            AutoGenerateColumns="False"
            ColumnSizer="Star"
            CurrentCellBorderThickness="0"
            FontSize="10"
            HeaderRowHeight="0"
            IsTabStop="True"
            ItemsSource="{Binding Solutions}"
            NavigationMode="Row"
            QueryRowHeight="SolutionsData_QueryRowHeight"
            SelectionChanged="SolutionsData_SelectionChanged"
            ShowBusyIndicator="True"
            TabIndex="10">
            <s:SfDataGrid.Columns>
                <s:GridTextColumn
                    IsHidden="{Binding Vertical}"
                    MappingName="Operations[0]"
                    TextAlignment="Center"
                    UseBindingValue="True" />
                <s:GridTextColumn
                    IsHidden="{Binding Vertical}"
                    MappingName="Operations[1]"
                    TextAlignment="Center"
                    UseBindingValue="True" />
                <s:GridTextColumn
                    IsHidden="{Binding Vertical}"
                    MappingName="Operations[2]"
                    TextAlignment="Center"
                    UseBindingValue="True" />
                <s:GridTextColumn
                    IsHidden="{Binding Vertical}"
                    MappingName="Operations[3]"
                    TextAlignment="Center"
                    UseBindingValue="True" />
                <s:GridTextColumn
                    IsHidden="{Binding Vertical}"
                    MappingName="Operations[4]"
                    TextAlignment="Center"
                    UseBindingValue="True" />
                <s:GridTemplateColumn CellTemplate="{StaticResource listboxOperations}" IsHidden="{Binding Vertical, Converter={StaticResource InverseBooleanConverter}}" />
            </s:SfDataGrid.Columns>
        </s:SfDataGrid>
        <s:SfBusyIndicator
            Name="Wait"
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="10"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Panel.ZIndex="10"
            AnimationType="DualRing"
            Foreground="DarkGreen"
            ViewboxHeight="100"
            ViewboxWidth="100"
            Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" />
        <StatusBar
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="10">

            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="128" />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem
                Grid.Column="0"
                Background="Transparent"
                Content="{Binding DotnetVersion, ElementName=chromelessWindow}" />
            <StatusBarItem Grid.Column="1" Background="Transparent">
                <TextBlock
                    x:Name="textBlock1"
                    Foreground="{DynamicResource TextForegroundBrush}"
                    Text="{Binding Result}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2" Background="Transparent">
                <TextBlock
                    x:Name="textBlock2"
                    Foreground="{DynamicResource TextForegroundBrush}"
                    Visibility="{Binding IsComputed, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Run Text="{Binding Count, Mode=OneWay}" /><Run Text=" solutions" /></TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3" Background="Transparent">
                <TextBlock
                    x:Name="textBlock3"
                    Foreground="{DynamicResource TextForegroundBrush}"
                    Text="{Binding Duree.TotalSeconds, Mode=OneWay, StringFormat=Durée: {0:N3}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4" Background="Transparent">
                <ComboBox
                    x:Name="cbstyle"
                    Foreground="{DynamicResource TextForegroundBrush}"
                    SelectedIndex="0"
                    Text="{Binding VisualStyle, ElementName=chromelessWindow, Mode=TwoWay}">
                    <ComboBoxItem Content="MaterialDark" />
                    <ComboBoxItem Content="MaterialDarkBlue" />
                    <ComboBoxItem Content="Office2019Black" />
                </ComboBox>
            </StatusBarItem>

            <StatusBarItem Grid.Column="5" Background="Transparent">
                <Button
                    Click="btnMode_Click"
                    Content="{Binding ModeView}"
                    IsTabStop="False"
                    ToolTipService.ToolTip="Vue grille ou liste" />
            </StatusBarItem>
        </StatusBar>
        <!--  ReSharper disable once Xaml.MissingGridIndex  -->
        <Popup
            Width="480"
            Height="200"
            AllowsTransparency="True"
            IsOpen="{Binding Popup}"
            Placement="Center"
            PlacementTarget="{Binding ElementName=SolutionsData}"
            PopupAnimation="Fade">
            <Border
                VerticalAlignment="Center"
                Background="{DynamicResource PopupBackground}"
                BorderBrush="{DynamicResource TextForegroundBrush}"
                BorderThickness="1"
                CornerRadius="2,2,2,2">
                <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                    <Label
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Content="{Binding Result}"
                        FontSize="14"
                        FontWeight="ExtraBlack"
                        Foreground="{DynamicResource TextForegroundBrush}" />
                    <Separator Background="Transparent" />
                    <ListBox
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        ItemsSource="{Binding Solution.Operations}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Style="{DynamicResource TextCellGrid}" Text="{Binding}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Separator Background="Transparent" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="10"
                        FontWeight="Medium"
                        Foreground="White"
                        TextAlignment="Center"><Run Text="{Binding Count, Mode=OneWay}" /><Run Text=" solutions" /></TextBlock>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="10"
                        FontWeight="Medium"
                        Foreground="White"
                        Text="{Binding Duree.TotalSeconds, Mode=OneWay, StringFormat=Durée: {0:N3}}"
                        TextAlignment="Center" />
                </StackPanel>
            </Border>
        </Popup>
    </Grid>
</s:ChromelessWindow>
