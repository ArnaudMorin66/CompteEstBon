<Window x:Class="CompteEstBon.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:hp="clr-namespace:CompteEstBon.Helpers"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mdl="clr-namespace:CompteEstBon.ViewModel"
        xmlns:s="http://schemas.syncfusion.com/wpf"
        xmlns:skin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
        x:Name="Window"
        Title="{Binding Titre}"
        skin:SfSkinManager.VisualStyle="FluentDark"
        BorderThickness="0.2"
        FontSize="10"
        FontWeight="Thin"
        Foreground="{DynamicResource TextForegroundBrush}"
        Icon="images/favicon.png"
        ResizeMode="CanResize"
        WindowStartupLocation="CenterScreen"
        WindowStyle="ThreeDBorderWindow"
        mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="TextForegroundBrush" Color="{Binding Foreground}" />
            <SolidColorBrush x:Key="TextBackgroundBrush" Color="{Binding Background}" />
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <hp:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <Style TargetType="{x:Type s:VirtualizingCellsControl}">
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
            </Style>
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
                <Setter Property="FontWeight" Value="Thin" />
            </Style>
            <Style x:Key="TextCellGrid" TargetType="TextBlock">
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
                <Setter Property="FontWeight" Value="Thin" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type s:ButtonAdv}}" TargetType="{x:Type s:ButtonAdv}">
                <Setter Property="Background" Value="{DynamicResource TextBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Command" Value="{Binding}" />
                <Setter Property="BorderThickness" Value="0.2" />
                <Setter Property="IsEnabled" Value="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}" />
                <Setter Property="IsTabStop" Value="True" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type StatusBarItem}}" TargetType="{x:Type StatusBarItem}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextForegroundBrush}" />
                <Setter Property="BorderThickness" Value="0.2" />
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type s:ComboBoxItemAdv}}" TargetType="{x:Type s:ComboBoxItemAdv}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>

        </ResourceDictionary>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="CebTaskbarInfo"
                         Description="Le compte est bon"
                         Overlay="favicon.ico">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo Command="{Binding}"
                                     CommandParameter="random"
                                     Description="Tirage"
                                     DismissWhenClicked="True"
                                     ImageSource="Images/random.png"
                                     IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}" />
                    <ThumbButtonInfo Command="{Binding}"
                                     CommandParameter="Resolve"
                                     CommandTarget="{Binding ElementName=BtnResoudre}"
                                     Description="Résoudre"
                                     DismissWhenClicked="True"
                                     ImageSource="Images/resolve.png"
                                     IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}" />
                    <ThumbButtonInfo Command="{Binding}"
                                     CommandParameter="export"
                                     CommandTarget="{Binding ElementName=BtnExport}"
                                     Description="Exportation Word/Excel"
                                     DismissWhenClicked="True"
                                     ImageSource="Images/excel.png"
                                     IsEnabled="{Binding IsComputed}" />
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Window.DataContext>
        <mdl:ViewTirage x:Name="ViewTirage" />
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="H"
                    Command="{Binding}"
                    CommandParameter="random"
                    CommandTarget="{Binding ElementName=BtnHasard}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="R"
                    Command="{Binding}"
                    CommandParameter="resolve"
                    CommandTarget="{Binding ElementName=BtnResoudre}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="X"
                    Command="{Binding}"
                    CommandParameter="export"
                    CommandTarget="{Binding ElementName=BtnExport}"
                    Modifiers="Ctrl" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="2" />
            <RowDefinition Height="40" />
            <RowDefinition Height="2" />
            <RowDefinition Height="*" />
            <RowDefinition Height="2" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                BorderBrush="{DynamicResource TextForegroundBrush}"
                Background="{DynamicResource TextBackgroundBrush}"
                BorderThickness="0.2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Label x:Name="LbPlaques"
                       Grid.Row="0"
                       Grid.Column="0"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       HorizontalContentAlignment="Center"
                       VerticalContentAlignment="Center"
                       BorderBrush="{DynamicResource TextForegroundBrush}"
                       BorderThickness="0.1"
                       Content="Plaques"
                       FontSize="10"
                       FontWeight="Thin"
                       Foreground="{DynamicResource TextForegroundBrush}" />
                <s:ComboBoxAdv x:Name="Plaque1"
                               Grid.Row="0"
                               Grid.Column="1"
                               Margin="1"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Center"
                               BorderBrush="{DynamicResource TextForegroundBrush}"
                               BorderThickness="0.1"
                               FontSize="10"
                               FontWeight="Thin"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               IsEditable="True"
                               IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                               ItemsSource="{x:Static mdl:ViewTirage.ListePlaques}"
                               TabIndex="0"
                               Text="{Binding Plaques[0], Mode=TwoWay}" />
                <s:ComboBoxAdv x:Name="Plaque2"
                               Grid.Row="0"
                               Grid.Column="2"
                               Margin="1"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Center"
                               BorderBrush="{DynamicResource TextForegroundBrush}"
                               BorderThickness="0.1"
                               FontSize="10"
                               FontWeight="Thin"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               IsEditable="True"
                               IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                               ItemsSource="{x:Static mdl:ViewTirage.ListePlaques}"
                               TabIndex="1"
                               Text="{Binding Plaques[1], Mode=TwoWay}" />
                <s:ComboBoxAdv x:Name="Plaque3"
                               Grid.Row="0"
                               Grid.Column="3"
                               Margin="1"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Center"
                               BorderBrush="{DynamicResource TextForegroundBrush}"
                               BorderThickness="0.1"
                               FontSize="10"
                               FontWeight="Thin"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               IsEditable="True"
                               IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                               ItemsSource="{x:Static mdl:ViewTirage.ListePlaques}"
                               TabIndex="2"
                               Text="{Binding Plaques[2], Mode=TwoWay}" />
                <s:ComboBoxAdv x:Name="Plaque4"
                               Grid.Row="0"
                               Grid.Column="4"
                               Margin="1"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Center"
                               BorderBrush="{DynamicResource TextForegroundBrush}"
                               BorderThickness="0.1"
                               FontSize="10"
                               FontWeight="Thin"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               IsEditable="True"
                               IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                               ItemsSource="{x:Static mdl:ViewTirage.ListePlaques}"
                               TabIndex="3"
                               Text="{Binding Plaques[3], Mode=TwoWay}" />
                <s:ComboBoxAdv x:Name="Plaque5"
                               Grid.Row="0"
                               Grid.Column="5"
                               Margin="1"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Center"
                               BorderBrush="{DynamicResource TextForegroundBrush}"
                               BorderThickness="0.1"
                               FontSize="10"
                               FontWeight="Thin"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               IsEditable="True"
                               IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                               ItemsSource="{x:Static mdl:ViewTirage.ListePlaques}"
                               TabIndex="6"
                               Text="{Binding Plaques[4], Mode=TwoWay}" />
                <s:ComboBoxAdv x:Name="Plaque6"
                               Grid.Row="0"
                               Grid.Column="6"
                               Margin="1"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Center"
                               BorderBrush="{DynamicResource TextForegroundBrush}"
                               BorderThickness="0.1"
                               FontSize="10"
                               FontWeight="Thin"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               IsEditable="True"
                               IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                               ItemsSource="{x:Static mdl:ViewTirage.ListePlaques}"
                               TabIndex="5"
                               Text="{Binding Plaques[5], Mode=TwoWay}" />
                <Label x:Name="LbSearch"
                       Grid.Row="0"
                       Grid.Column="7"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       HorizontalContentAlignment="Center"
                       VerticalContentAlignment="Center"
                       BorderBrush="{DynamicResource TextForegroundBrush}"
                       BorderThickness="0"
                       Content="Trouver"
                       FontSize="10"
                       FontWeight="Thin"
                       Foreground="{DynamicResource TextForegroundBrush}" />
                <s:UpDown x:Name="Search"
                          Grid.Row="0"
                          Grid.Column="8"
                          Margin="1"
                          VerticalAlignment="Stretch"
                          VerticalContentAlignment="Stretch"
                          ApplyZeroColor="False"
                          BorderBrush="{DynamicResource TextForegroundBrush}"
                          BorderThickness="0.1"
                          FontSize="10"
                          FontWeight="Thin"
                          Foreground="{DynamicResource TextForegroundBrush}"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          IsTabStop="True"
                          NumberDecimalDigits="0"
                          TabIndex="6"
                          TextAlignment="Center"
                          Value="{Binding Search, Mode=TwoWay}" />
            </Grid>
        </Border>
        <s:ButtonAdv x:Name="BtnResoudre"
                     Grid.Row="2"
                     Grid.Column="0"
                     CommandParameter="resolve"
                     IsDefault="True"
                     IsMultiLine="False"
                     Label="Résoudre"
                     SizeMode="Normal"
                     SmallIcon="images/exec.png"
                     TabIndex="7"
                     ToolTipService.ToolTip="Lancement résolution (Ctrl+R)" />
        <s:ButtonAdv x:Name="BtnHasard"
                     Grid.Row="2"
                     Grid.Column="1"
                     CommandParameter="random"
                     IsMultiLine="False"
                     Label="Tirage"
                     SizeMode="Normal"
                     SmallIcon="images/random.png"
                     TabIndex="8"
                     ToolTipService.ToolTip="Lancement tirage (Ctrl+H)" />
        <s:ButtonAdv x:Name="BtnExport"
                     Grid.Row="2"
                     Grid.Column="2"
                     CommandParameter="export"
                     IsEnabled="{Binding IsComputed}"
                     IsMultiLine="False"
                     Label="Export"
                     SmallIcon="images/excel.png"
                     TabIndex="9"
                     ToolTipService.ToolTip="Export Excel (Ctrl+X)" />
        <s:SfDataGrid x:Name="SolutionsData"
                      Grid.Row="4"
                      Grid.Column="0"
                      Grid.ColumnSpan="3"
                      Margin="0.2"
                      x:FieldModifier="public"
                      AllowFiltering="False"
                      AllowGrouping="False"
                      AllowSelectionOnPointerPressed="True"
                      AllowSorting="False"
                      AutoGenerateColumns="False"
                      Background="{DynamicResource TextBackgroundBrush}"
                      BorderBrush="{DynamicResource TextForegroundBrush}"
                      BorderThickness="0.2"
                      ColumnSizer="Star"
                      CurrentCellBorderThickness="0"
                      FontSize="10"
                      FontWeight="Thin"
                      Foreground="{DynamicResource TextForegroundBrush}"
                      HeaderRowHeight="0"
                      IsTabStop="True"
                      EnableDataVirtualization="True"
                      ItemsSource="{Binding Solutions}"
                      QueryRowHeight="SolutionsData_QueryRowHeight"
                      RowSelectionBrush="{DynamicResource TextForegroundBrush}"
                      SelectionChanged="SolutionsData_SelectionChanged"
                      ShowBusyIndicator="True"
                      TabIndex="10">
            <s:SfDataGrid.Columns>
                <s:GridTextColumn IsHidden="{Binding Vertical}"
                                  MappingName="Operations[0]"
                                  TextAlignment="Center"
                                  UseBindingValue="True" />
                <s:GridTextColumn IsHidden="{Binding Vertical}"
                                  MappingName="Operations[1]"
                                  TextAlignment="Center"
                                  UseBindingValue="True" />
                <s:GridTextColumn IsHidden="{Binding Vertical}"
                                  MappingName="Operations[2]"
                                  TextAlignment="Center"
                                  UseBindingValue="True" />
                <s:GridTextColumn IsHidden="{Binding Vertical}"
                                  MappingName="Operations[3]"
                                  TextAlignment="Center"
                                  UseBindingValue="True" />
                <s:GridTextColumn IsHidden="{Binding Vertical}"
                                  MappingName="Operations[4]"
                                  TextAlignment="Center"
                                  UseBindingValue="True" />
                <s:GridTemplateColumn IsHidden="{Binding Vertical, Converter={StaticResource InverseBooleanConverter}}">
                    <s:GridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <ListView HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="Stretch"
                                      BorderBrush="{DynamicResource TextForegroundBrush}"
                                      Background="{DynamicResource TextBackgroundBrush}"
                                      BorderThickness="0"
                                      IsEnabled="False"
                                      ItemsSource="{Binding Operations}" IsSynchronizedWithCurrentItem="False" UseLayoutRounding="True">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{DynamicResource TextCellGrid}" Text="{Binding}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </DataTemplate>
                    </s:GridTemplateColumn.CellTemplate>
                </s:GridTemplateColumn>
            </s:SfDataGrid.Columns>
        </s:SfDataGrid>
        <s:SfBusyIndicator Name="Wait"
                           Grid.Row="4"
                           Grid.Column="0"
                           Grid.ColumnSpan="3"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Panel.ZIndex="10"
                           AnimationType="Ball"
                           Foreground="{DynamicResource TextForegroundBrush}"
                           IsBusy="{Binding IsBusy}" />
        <StatusBar Grid.Row="6"
                   Grid.Column="0"
                   Grid.ColumnSpan="3"
                   Background="{DynamicResource TextBackgroundBrush}"
                   Foreground="{DynamicResource TextForegroundBrush}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock x:Name="TextBlock0"
                           Foreground="{DynamicResource TextForegroundBrush}"
                           Text="{Binding DotnetVersion}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock x:Name="TextBlock1"
                           Foreground="{DynamicResource TextForegroundBrush}"
                           Text="{Binding Result}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="TextBlock2"
                           Foreground="{DynamicResource TextForegroundBrush}"
                           Visibility="{Binding IsComputed, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Run Text="{Binding Count, Mode=OneWay}" />
                    <Run Text=" solutions" />
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock x:Name="TextBlock3"
                           Foreground="{DynamicResource TextForegroundBrush}"
                           Text="{Binding Duree.TotalSeconds, Mode=OneWay, StringFormat=Durée: {0:N3}}"
                           Visibility="{Binding IsComputed, Converter={StaticResource BoolToVisibilityConverter}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <s:ComboBoxAdv x:Name="Cbstyle"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               SelectedIndex="0"
                               Text="{Binding VisualStyle, ElementName=Window, Mode=TwoWay}">
                    <s:ComboBoxItemAdv Content="FluentDark" />
                    <s:ComboBoxItemAdv Content="MaterialDark" />
                    <s:ComboBoxItemAdv Content="MaterialDarkBlue" />
                    <s:ComboBoxItemAdv Content="Office2019Black" />
                    <s:ComboBoxItemAdv Content="Windows11Dark" />
                </s:ComboBoxAdv>
            </StatusBarItem>
            <StatusBarItem Grid.Column="5">
                <s:ButtonAdv x:Name="CbAuto"
                             HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Stretch"
                             Background="{DynamicResource TextBackgroundBrush}"
                             BorderThickness="0"
                             IconHeight="0"
                             IconWidth="0"
                             IsCheckable="True"
                             IsChecked="{Binding Auto}"
                             IsTabStop="False"
                             Label="Auto"
                             ToolTipService.ToolTip="Mode auto" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="6">
                <s:ButtonAdv HorizontalAlignment="Stretch"
                             Background="{DynamicResource TextBackgroundBrush}"
                             BorderThickness="0"
                             IconHeight="0"
                             IconWidth="0"
                             IsCheckable="True"
                             IsChecked="{Binding MongoDb}"
                             Label="Mongo"
                             SizeMode="Normal"
                             ToolTipService.ToolTip="Sauvegarde dans Mongo" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="7">
                <s:ButtonAdv Background="{DynamicResource TextBackgroundBrush}"
                             BorderThickness="0"
                             Click="BtnMode_Click"
                             IconHeight="0"
                             IconWidth="0"
                             IsTabStop="False"
                             Label="{Binding ModeView}"
                             SizeMode="Large"
                             ToolTipService.ToolTip="Vue grille ou liste" />
            </StatusBarItem>

        </StatusBar>
        <!--  ReSharper disable once Xaml.MissingGridIndex  -->
        <Popup Width="480"
               Height="200"
               AllowsTransparency="True"
               IsOpen="{Binding Popup}"
               Placement="Center"
               PlacementTarget="{Binding ElementName=SolutionsData}"
               PopupAnimation="Fade">
            <Border VerticalAlignment="Center"
                    Background="{DynamicResource PopupBackground}"
                    BorderBrush="{DynamicResource TextForegroundBrush}"
                    BorderThickness="1"
                    CornerRadius="4">
                <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                    <Label HorizontalAlignment="Stretch"
                           VerticalAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Content="{Binding Result}"
                           FontSize="14"
                           FontWeight="ExtraBlack"
                           Foreground="{DynamicResource TextForegroundBrush}" />
                    <Separator Margin="0" BorderThickness="0.2" BorderBrush="{DynamicResource TextForegroundBrush}"/>
                    <ListBox HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Center"
                             ItemsSource="{Binding Solution.Operations}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource TextCellGrid}"
                                           Text="{Binding}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Separator Margin="0" BorderThickness="0.1" BorderBrush="{DynamicResource TextForegroundBrush}"/>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="10"
                               FontWeight="Medium"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               TextAlignment="Center">
                        <Run Text="{Binding Count, Mode=OneWay}" />
                        <Run Text=" solutions" />
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="10"
                               FontWeight="Medium"
                               Foreground="{DynamicResource TextForegroundBrush}"
                               Text="{Binding Duree.TotalSeconds, Mode=OneWay, StringFormat=Durée: {0:N3}}"
                               TextAlignment="Center" />
                </StackPanel>
            </Border>
        </Popup>
    </Grid>
</Window>