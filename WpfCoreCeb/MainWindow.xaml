<Window x:Class="CompteEstBon.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:hp="clr-namespace:CompteEstBon.Helpers"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="clr-namespace:System;assembly=System.Runtime"
        xmlns:vw="clr-namespace:CompteEstBon.ViewModel"
        x:Name="CebWindow"
        Title="{Binding Titre}"
        d:DesignHeight="340.99"
        d:DesignWidth="676.677"
        Background="{DynamicResource CebBackgroundBrush}"
        BorderBrush="{DynamicResource CebForegroundBrush}"
        BorderThickness="0.2"
        FontSize="11"
        Icon="favicon.ico"
        OverridesDefaultStyle="False"
        ResizeMode="CanResize"
        WindowStartupLocation="CenterScreen"
        WindowStyle="SingleBorderWindow"
        mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CebDictionary.xaml" />
                <ResourceDictionary Source="/CebComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <s:Boolean x:Key="True">true</s:Boolean>
            <hp:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <hp:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="CebTaskbarInfo"
                         Description="Le compte est bon"
                         Overlay="favicon.ico">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo Command="{Binding}"
                                     CommandParameter="random"
                                     Description="Tirage"
                                     DismissWhenClicked="True"
                                     ImageSource="Images/random.png"
                                     IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}" />
                    <ThumbButtonInfo Command="{Binding}"
                                     CommandParameter="Resolve"
                                     CommandTarget="{Binding ElementName=btnResoudre}"
                                     Description="Résoudre"
                                     DismissWhenClicked="True"
                                     ImageSource="Images/resolve.png"
                                     IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}" />
                    <ThumbButtonInfo Command="{Binding}"
                                     CommandParameter="export"
                                     CommandTarget="{Binding ElementName=btnExport}"
                                     Description="Exportation Word/Excel"
                                     DismissWhenClicked="True"
                                     ImageSource="Images/excel.png"
                                     IsEnabled="{Binding IsComputed}" />
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Window.DataContext>
        <vw:ViewTirage x:Name="ViewTirage" />
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="H"
                    Command="{Binding}"
                    CommandParameter="random"
                    CommandTarget="{Binding ElementName=btnHasard}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="R"
                    Command="{Binding}"
                    CommandParameter="resolve"
                    CommandTarget="{Binding ElementName=btnResoudre}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="X"
                    Command="{Binding}"
                    CommandParameter="export"
                    CommandTarget="{Binding ElementName=btnExport}"
                    Modifiers="Ctrl" />
    </Window.InputBindings>
    <Grid Background="{DynamicResource CebBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="2" />
            <RowDefinition Height="40" />
            <RowDefinition Height="2" />
            <RowDefinition Height="*" />
            <RowDefinition Height="2" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                BorderBrush="{DynamicResource TextForegroundBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>


                <Label x:Name="lbPlaques"
                       Grid.Row="0"
                       Grid.Column="0"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       HorizontalContentAlignment="Center"
                       VerticalContentAlignment="Center"
                       BorderBrush="{DynamicResource CebForegroundBrush}"
                       BorderThickness="0"
                       Content="Plaques"
                       Foreground="{DynamicResource CebForegroundBrush}" />
                <ComboBox x:Name="Plaque1"
                          Grid.Row="0"
                          Grid.Column="1"
                          Margin="1"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Center"
                          BorderBrush="{DynamicResource CebForegroundBrush}"
                          BorderThickness="0.2"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsEditable="True"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          TabIndex="0"
                          Text="{Binding Plaques[0], Mode=TwoWay}" />
                <ComboBox x:Name="Plaque2"
                          Grid.Row="0"
                          Grid.Column="2"
                          Margin="1"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Center"
                          BorderBrush="{DynamicResource CebForegroundBrush}"
                          BorderThickness="0.2"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsEditable="True"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          TabIndex="1"
                          Text="{Binding Plaques[1], Mode=TwoWay}" />
                <ComboBox x:Name="Plaque3"
                          Grid.Row="0"
                          Grid.Column="3"
                          Margin="1"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Center"
                          BorderBrush="{DynamicResource CebForegroundBrush}"
                          BorderThickness="0.2"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsEditable="True"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          TabIndex="2"
                          Text="{Binding Plaques[2], Mode=TwoWay}" />
                <ComboBox x:Name="Plaque4"
                          Grid.Row="0"
                          Grid.Column="4"
                          Margin="1"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Center"
                          BorderBrush="{DynamicResource CebForegroundBrush}"
                          BorderThickness="0.2"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsEditable="True"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          TabIndex="3"
                          Text="{Binding Plaques[3], Mode=TwoWay}" />
                <ComboBox x:Name="Plaque5"
                          Grid.Row="0"
                          Grid.Column="5"
                          Margin="1"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Center"
                          BorderBrush="{DynamicResource CebForegroundBrush}"
                          BorderThickness="0.2"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsEditable="True"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          TabIndex="4"
                          Text="{Binding Plaques[4], Mode=TwoWay}" />
                <ComboBox x:Name="Plaque6"
                          Grid.Row="0"
                          Grid.Column="6"
                          Margin="1"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Center"
                          BorderBrush="{DynamicResource CebForegroundBrush}"
                          BorderThickness="0.2"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsEditable="True"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          TabIndex="5"
                          Text="{Binding Plaques[5], Mode=TwoWay}" />
                <Label x:Name="lbSearch"
                       Grid.Row="0"
                       Grid.Column="7"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       HorizontalContentAlignment="Center"
                       VerticalContentAlignment="Center"
                       BorderBrush="{DynamicResource CebForegroundBrush}"
                       BorderThickness="0"
                       Content="Trouver"
                       Foreground="{DynamicResource CebForegroundBrush}" />

                <Grid Grid.Row="0"
                      Grid.Column="8"
                      Background="{DynamicResource CebBackgroundBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <RepeatButton x:Name="tbMoins"
                                  Grid.Column="0"
                                  Margin="1"
                                  Click="TbMoins_Click"
                                  Content="-"
                                  Foreground="{DynamicResource CebForegroundBrush}"
                                  IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                                  Template="{DynamicResource CebRepeatButtonTemplate}" />
                    <TextBox x:Name="txtSearch"
                             Grid.Column="1"
                             CaretBrush="White"
                             GotFocus="TxtSearch_GotFocus"
                             IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                             IsTabStop="True"
                             LostFocus="TxtSearch_LostFocus"
                             Style="{StaticResource SearchControlStyle}"
                             TabIndex="6"
                             Text="{Binding Search, Mode=TwoWay}" />
                    <RepeatButton x:Name="tbPlus"
                                  Grid.Column="2"
                                  Click="TbPlus_Click"
                                  Content="+"
                                  Foreground="{DynamicResource CebForegroundBrush}"
                                  IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                                  Template="{DynamicResource CebRepeatButtonTemplate}" />
                </Grid>
            </Grid>
        </Border>
        <Button x:Name="btnResoudre"
                Grid.Row="2"
                Grid.Column="0"
                Margin="1,1,1,1"
                Command="{Binding}"
                CommandParameter="resolve"
                IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                IsTabStop="True"
                TabIndex="7"
                ToolTipService.ToolTip="Résoudre le compte, Ctrl+R">
            <StackPanel Orientation="Horizontal">
                <Image Height="20"
                       HorizontalAlignment="Center"
                       Source="images/resolve.png" />
                <TextBlock Margin="4"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Text="Résoudre" />
            </StackPanel>
        </Button>
        <Button x:Name="btnHasard"
                Grid.Row="2"
                Grid.Column="1"
                Margin="1,1,1,1"
                Command="{Binding}"
                CommandParameter="random"
                IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                TabIndex="8"
                ToolTipService.ToolTip="Choisir les plaques,  Ctrl+H">
            <StackPanel Orientation="Horizontal">
                <Image Height="20"
                       HorizontalAlignment="Center"
                       Source="images/random.png" />
                <TextBlock Margin="4"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Text="Tirage" />

            </StackPanel>

        </Button>
        <Button x:Name="btnExport"
                Grid.Row="2"
                Grid.Column="2"
                Margin="1,1,1,1"
                Command="{Binding}"
                CommandParameter="export"
                IsEnabled="{Binding IsComputed}"
                IsTabStop="True"
                TabIndex="9"
                ToolTipService.ToolTip="Exportation vers Word ou Excel">
            <StackPanel Orientation="Horizontal">
                <Image Height="20"
                       HorizontalAlignment="Center"
                       Source="images/excel.png" />
                <TextBlock Margin="4"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Text="Export" />
            </StackPanel>
        </Button>
        <DataGrid x:Name="SolutionsData"
                  Grid.Row="4"
                  Grid.RowSpan="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  x:FieldModifier="public"
                  AlternationCount="1"
                  AutoGenerateColumns="False"
                  Background="{DynamicResource CebBackgroundBrush}"
                  BorderBrush="{DynamicResource CebForegroundBrush}"
                  BorderThickness="0.3"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="False"
                  CanUserResizeRows="False"
                  CanUserSortColumns="False"
                  CellStyle="{DynamicResource SolutionsCellStyle}"
                  FontSize="12"
                  FontWeight="Bold"
                  GridLinesVisibility="None"
                  HeadersVisibility="None"
                  IsReadOnly="True"
                  ItemsSource="{Binding Solutions}"
                  RowStyle="{StaticResource DataGridRowStyle}"
                  SelectionChanged="SolutionsData_SelectionChanged"
                  TabIndex="10">
            <DataGrid.Columns>
                <DataGridTextColumn Width="*"
                                    Binding="{Binding Operations[0], IsAsync=True, Mode=OneWay}"
                                    ElementStyle="{StaticResource CebGridTextBlockColumnStyle}"
                                    Header="Opération 1"
                                    IsReadOnly="True"
                                    Visibility="{Binding Vertical, Converter={StaticResource BoolToVisibilityConverter}, Source={x:Reference ViewTirage}}" />
                <DataGridTextColumn Width="*"
                                    Binding="{Binding Operations[1], IsAsync=True, Mode=OneWay}"
                                    ElementStyle="{StaticResource CebGridTextBlockColumnStyle}"
                                    Header="Opération 2"
                                    IsReadOnly="True"
                                    Visibility="{Binding Vertical, Converter={StaticResource BoolToVisibilityConverter}, Source={x:Reference ViewTirage}}" />
                <DataGridTextColumn Width="*"
                                    Binding="{Binding Operations[2], IsAsync=True, Mode=OneWay}"
                                    ElementStyle="{StaticResource CebGridTextBlockColumnStyle}"
                                    Header="Opération 3"
                                    IsReadOnly="True"
                                    Visibility="{Binding Vertical, Converter={StaticResource BoolToVisibilityConverter}, Source={x:Reference ViewTirage}}" />
                <DataGridTextColumn Width="*"
                                    Binding="{Binding Operations[3], Mode=OneWay, IsAsync=True}"
                                    ElementStyle="{StaticResource CebGridTextBlockColumnStyle}"
                                    Header="Opération 4"
                                    IsReadOnly="True"
                                    Visibility="{Binding Vertical, Converter={StaticResource BoolToVisibilityConverter}, Source={x:Reference ViewTirage}}" />
                <DataGridTextColumn Width="*"
                                    Binding="{Binding Operations[4], Mode=OneWay, IsAsync=True}"
                                    ElementStyle="{StaticResource CebGridTextBlockColumnStyle}"
                                    Header="Opération 5"
                                    IsReadOnly="True"
                                    Visibility="{Binding Vertical, Converter={StaticResource BoolToVisibilityConverter}, Source={x:Reference ViewTirage}}" />
                <DataGridTemplateColumn Width="*"
                                        IsReadOnly="True"
                                        Visibility="{Binding Vertical, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource True}, Source={x:Reference ViewTirage}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ListBox HorizontalAlignment="Stretch"
                                     HorizontalContentAlignment="Center"
                                     Background="{DynamicResource CebBackgroundBrush}"
                                     BorderBrush="{DynamicResource CebForegroundBrush}"
                                     BorderThickness="0,0,0,0.3"
                                     Foreground="{DynamicResource CebForegroundBrush}"
                                     IsEnabled="True"
                                     IsTextSearchCaseSensitive="True"
                                     ItemsSource="{Binding Operations}"
                                     KeyboardNavigation.DirectionalNavigation="Continue"
                                     PreviewMouseDown="ListBox_PreviewMouseDown"
                                     PreviewMouseWheel="ListView_PreviewMouseWheel"
                                     ScrollViewer.CanContentScroll="False"
                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                     UseLayoutRounding="True">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <ProgressBar Grid.Row="4"
                     Grid.Column="0"
                     Grid.ColumnSpan="3"
                     Width="200"
                     Height="20"
                     Margin="13,90,0,91"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Panel.ZIndex="10"
                     Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                     BorderBrush="Yellow"
                     BorderThickness="0.4"
                     IsIndeterminate="True"
                     Maximum="100"
                     Minimum="0"
                     Orientation="Horizontal"
                     SmallChange="0.2"
                     Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource True}}" />
        <Popup Grid.Row="0"
               Grid.RowSpan="3"
               Grid.Column="0"
               Grid.ColumnSpan="3"
               Width="400"
               Margin="0,0,51,12"
               IsOpen="{Binding Popup}"
               Placement="Center"
               PlacementTarget="{Binding ElementName=SolutionsData}">
            <Border Background="{DynamicResource CebBackgroundBrush}"
                    BorderBrush="{DynamicResource CebForegroundBrush}"
                    BorderThickness="0.5">
                <StackPanel HorizontalAlignment="Stretch"
                            Background="{DynamicResource CebBackgroundBrush}"
                            Orientation="Vertical">
                    <Label HorizontalAlignment="Stretch"
                           VerticalAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Background="DarkSlateGray"
                           Content="{Binding Result}"
                           FontSize="11"
                           FontWeight="ExtraBlack"
                           Foreground="{DynamicResource CebForegroundBrush}" />
                    <Separator Background="Transparent" Foreground="{DynamicResource CebForegroundBrush}" />
                    <ListBox HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Center"
                             Background="{DynamicResource CebBackgroundBrush}"
                             BorderBrush="{DynamicResource CebForegroundBrush}"
                             BorderThickness="0"
                             Foreground="{DynamicResource CebForegroundBrush}"
                             IsEnabled="True"
                             IsTextSearchCaseSensitive="True"
                             ItemsSource="{Binding Solution.Operations}"
                             UseLayoutRounding="True">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Text="{Binding}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Separator Height="0.5" Background="{DynamicResource CebForegroundBrush}" />
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="11"
                               FontWeight="Medium"
                               Foreground="White"
                               TextAlignment="Center">
                        <Run Text="Nombre de solutions: " />
                        <Run Text="{Binding Count, Mode=OneWay}" />
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="11"
                               FontWeight="Medium"
                               Foreground="White"
                               Text="{Binding Duree.TotalSeconds, StringFormat=Durée {0:N3}}"
                               TextAlignment="Center" />
                </StackPanel>
            </Border>
        </Popup>

        <StatusBar Grid.Row="6"
                   Grid.Column="0"
                   Grid.ColumnSpan="3"
                   Background="Transparent"
                   BorderBrush="White"
                   BorderThickness="0.1">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Foreground="{StaticResource CebForegroundBrush}" Text="{Binding DotnetVersion, ElementName=CebWindow}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock x:Name="textBlock1"
                           FontSize="11"
                           Foreground="{StaticResource CebForegroundBrush}"
                           Text="{Binding Result}"
                           TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="textBlock2"
                           Foreground="{StaticResource CebForegroundBrush}"
                           TextAlignment="Center"
                           Visibility="{Binding IsComputed, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Run Text="{Binding Count, Mode=OneWay}" />
                    <Run Text=" solutions" />
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock x:Name="textBlock3"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Foreground="{StaticResource CebForegroundBrush}"
                           Text="{Binding Duree.TotalSeconds, StringFormat=Durée {0:N3}}"
                           TextAlignment="Center"
                           Visibility="{Binding IsComputed, Converter={StaticResource BoolToVisibilityConverter}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <ComboBox Foreground="{DynamicResource CebForegroundBrush}"
                          ItemsSource="{Binding ThemeColors.Keys}"
                          Text="{Binding Theme, Mode=TwoWay}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="5"
                           Width="Auto"
                           HorizontalAlignment="Stretch">
                <CheckBox x:Name="cbAuto"
                          HorizontalAlignment="Center"
                          HorizontalContentAlignment="Center"
                          Content="Auto"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsChecked="{Binding Auto}"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          IsTabStop="False"
                          ToolTipService.ToolTip="Mode auto" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="6"
                           Width="Auto"
                           HorizontalAlignment="Stretch">
                <CheckBox x:Name="cbMongoDb"
                          HorizontalAlignment="Center"
                          HorizontalContentAlignment="Center"
                          Content="MongoDB"
                          Foreground="{DynamicResource CebForegroundBrush}"
                          IsChecked="{Binding MongoDb}"
                          IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}"
                          IsTabStop="False"
                          ToolTipService.ToolTip="Mongo db" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="7">
                <Button x:Name="btnMode"
                        Margin="0"
                        HorizontalAlignment="Center"
                        Background="{DynamicResource CebBackgroundBrush}"
                        Click="BtnMode_Click"
                        Content="{Binding ModeView}"
                        Style="{StaticResource ButtonWindowsStyle}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>