@using CompteEstBon
@using System.Collections.ObjectModel
@using Microsoft.AspNetCore.Components
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids


<SfGrid @bind-DataSource="Details"
        GridLines="GridLine.None"
        Height="400"
        AllowSelection="true"
        AllowExcelExport="true"
        AllowResizing="true"
        EnableAltRow="true"
        TValue="CebBase"
        ID="solutions">
    <GridEvents RowSelected="@(async (arg) => await ShowDetail.InvokeAsync(Details.ElementAt((int)arg.RowIndex)))"
                TValue="Object"></GridEvents>
    <GridSelectionSettings Mode="Syncfusion.Blazor.Grids.SelectionMode.Row" Type="SelectionType.Single"></GridSelectionSettings>
    <GridColumns>
        <GridColumn Field=@(column(1))></GridColumn>
        <GridColumn Field=@(column(2))></GridColumn>
        <GridColumn>
            <Template Context="data">
                @if (TypeGrille == CebTypeGrille.Grille)
                {
                    @((data as CebBase).Op3)
                }
                else
                {
                    var det = data as CebBase;
                    <div>@det.Op1</div>
                    <div>@det.Op2</div>
                    <div>@det.Op3</div>
                    <div>@det.Op4</div>
                    <div>@det.Op5</div>

                }
            </Template>
        </GridColumn>
        <GridColumn Field=@(column(4))></GridColumn>
        <GridColumn Field=@(column(5))></GridColumn>
    </GridColumns>
</SfGrid>
@code {


    private CebTypeGrille _typegrille;
    [Parameter]
    public CebTypeGrille TypeGrille
    {
        get => _typegrille;
        set
        {
            if (_typegrille != value)
            {
                _typegrille = value;

                InvokeAsync(StateHasChanged);
            }
        }
    }



    [Parameter]
    public IEnumerable<CebBase> Details { get; set; }

    [Parameter] public EventCallback<CebBase> ShowDetail { get; set; }


    protected async override Task OnInitializedAsync()
    {
        //_Details = new List<TDetail>();
        await base.OnInitializedAsync();
    }
    protected string column(int n) => TypeGrille == CebTypeGrille.Grille ? $"Op{n}" : "";
}

