@using CompteEstBon
@using System.Text
@using Syncfusion.EJ2.Blazor.Grids
@inject CebTirage tirage
@*

    @if (TypeGrille == CebTypeGrille.Liste) {

        <div id="listsol" class="e-control e-grid e-lib e-default e-hidelines" role="grid" tabindex="0" style="width: auto;">
            <div class="e-gridcontent e-lib">
                <div class="e-content" aria-busy="false" style="height: 400px; overflow-y: scroll;">
                    <div>
                        <table class="e-table" role="grid" aria-multiselectable="false" aria-colcount="1">
                            <colgroup>
                                <col>
                            </colgroup>
                            <tbody>
                                @for (var i = 0; i < tirage.Details.Count; i++) {
                                    var ix = i;
                                    <tr role="row" class="e-row" aria-rowindex="@ix" @onclick="@(async ()=> { await Toast.ShowAsync(ix); })">
                                        <td class="e-rowcell" role="gridcell">
                                            @{
                                                var detail = tirage.Details[i];
                                                <div>@detail.Op1</div>
                                                if (!string.IsNullOrEmpty(detail.Op2)) {
                                                    <div>@detail.Op2</div>
                                                    if (!string.IsNullOrEmpty(detail.Op3)) {
                                                        <div>@detail.Op3</div>
                                                        if (!string.IsNullOrEmpty(detail.Op4)) {
                                                            <div>@detail.Op4</div>
                                                            if (!string.IsNullOrEmpty(detail.Op5)) {
                                                                <div>@detail.Op5</div>
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    } else {
*@
@if (TypeGrille == CebTypeGrille.Liste) {
    <EjsGrid @ref="lsolutions"
             DataSource="@tirage.Details"
             GridLines="GridLine.None"
             TValue="CebDetail"
             Height="400"
             ModelType="@ModelDetail"
             AllowSelection="true"
             AllowExcelExport="true"
             EnableAltRow="true"
             id="lsolutions">
        <GridSelectionSettings Type="SelectionType.Single"></GridSelectionSettings>
        <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
        <GridEvents RowSelected="@(async (args) => { await Toast.ShowAsync((int)args.RowIndex); })" TValue="CebDetail"></GridEvents>
        <GridColumns>
            <GridColumn>
                <Template>
                    @{
                        if (context is CebDetail detail) {

                            <div>@detail.Op1</div>
                            @if (!string.IsNullOrEmpty(detail.Op2)) {
                                <div>@detail.Op2</div>
                                @if (!string.IsNullOrEmpty(detail.Op3)) {
                                    <div>@detail.Op3</div>
                                    @if (!string.IsNullOrEmpty(detail.Op4)) {
                                        <div>@detail.Op4</div>
                                        @if (!string.IsNullOrEmpty(detail.Op5)) {
                                            <div>@detail.Op5</div>
                                        }
                                    }
                                }
                            }

                        } else {
                            <td>??</td>
                        }
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </EjsGrid>
} else {
    <EjsGrid @ref="solutions"
             DataSource="@tirage.Details"
             GridLines="GridLine.None"
             TValue="CebDetail"
             Height="400"
             EnableVirtualization="true"
             AllowSelection="true"
             AllowExcelExport="true"
             EnableAltRow="true"
             id="solutions">
        <GridSelectionSettings Type="SelectionType.Single"></GridSelectionSettings>
        <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
        <GridEvents RowSelected="@(async (args) => { await Toast.ShowAsync((int)args.RowIndex); })" TValue="CebDetail"></GridEvents>
    </EjsGrid>
}

@code {

    [Parameter]
    public CebTypeGrille TypeGrille { get; set; }



    [Parameter] public CebToast Toast { get; set; }
    CebDetail ModelDetail = new CebDetail();

    EjsGrid<CebDetail> solutions { get; set; }
    EjsGrid<CebDetail> lsolutions { get; set; }

    public async Task Refresh() {
        if (TypeGrille == CebTypeGrille.Grille) {
            await InvokeAsync(solutions.Refresh);
        } else {
            await InvokeAsync(lsolutions.Refresh);
        }


    }
    public void ExportExcel() {
        if (tirage.Status != CebStatus.CompteApproche && tirage.Status != CebStatus.CompteEstBon) return;
        solutions.ExcelExport(new ExcelExportProperties { ExportType = ExportType.AllPages });

    }


}
