@using Microsoft.AspNetCore.Components
@using System.Threading
@using CompteEstBon
@using Microsoft.AspNetCore.Components
@inject CebTirage tirage
<EjsDialog Width="480" @bind-Visible="@Visible" CssClass="a-toast" ShowCloseIcon="false"
                       ID="DlgToast">
               <DialogAnimationSettings Effect="@DialogEffect.SlideBottom" Duration="400"></DialogAnimationSettings>
               <DialogTemplates>
                   <Content>
                       @{
                           var cls = "";
                           var title = "";
                           var icn = "";
                           var rsl = "";
                           if (tirage.Status == CebStatus.CompteEstBon) {
                               title = "bg-gradient-success text-white";
                               cls = "bg-success text-white";
                               icn = "fa-thumbs-up text-white";
                               rsl = "Compte est bon";
                           }
                           else if (tirage.Status == CebStatus.CompteApproche) {
                               title = "bg-gradient-warning text-dark";
                               icn = "fa-thumbs-down text-danger";
                               cls = "bg-warning text-dark";
                               rsl = "Compte approché";
                           }
                           else {
                               return;
                           }
                           <div class="text-center text-uppercase font-weight-bold @title">
                               <div class="animation">
                                   <i class="far @icn"></i>&nbsp;@rsl
                               </div>
                           </div>
                           <div>&nbsp;</div>
                           <div class="text-center text-white">
                               <div>Trouvé(s):&nbsp;@tirage.Found</div>
                               @if (tirage.Diff != 0) {
                                   <div>&Eacute;cart:&nbsp;@tirage.Diff</div>
                               }
                               <div>@tirage.Solutions.Count&nbsp;solutions</div>
                               <div>Durée:&nbsp;@($"{Duree:N3}")s</div>
                           </div>
                           <div>&nbsp;</div>
                           <div class="w-100 text-center  @cls">@Solution</div>
                       }
                   </Content>
               </DialogTemplates>
           </EjsDialog>

           @code {
               protected Timer timer;
               private bool _visible;

               public bool Visible {
                   get => _visible;
                   set {
                       if (value != _visible) {
                           _visible = value;
                           if (_visible) {
                               timer.Change(DueTime, 0);
                           }
                           InvokeAsync(StateHasChanged);
                       }
                   }
               }

               public string Solution { get; set; }

               [Parameter]
               public double Duree { get; set; }

               [Parameter]
               public int DueTime { get; set; }

               protected override void OnInitialized() {
                   DueTime = 5000;
                   timer = new Timer(state => { Visible = false; });
               }

               public async Task ShowAsync(int index) {
                   Solution = tirage.SolutionIndex(index);
                   Visible = true;
                   await InvokeAsync(StateHasChanged);
               }

               public async Task HideAsync() {
                   Visible = false;
                   await InvokeAsync(StateHasChanged);
               }

           }