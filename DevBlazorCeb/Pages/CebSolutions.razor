@using CompteEstBon
@using System.Collections.ObjectModel
@using DevExpress.Blazor.Grid
@inject CebTirage tirage
    
        <DxDataGrid Id="solutions" @ref="dxgrille" Data="Details"
                    ShowFilterRow="false"
                    CssClass="table-fixed"
                    DataRowCssClass="drowclass"
                    ShowColumnHeaders="false"
                    RowClick="@((arg)=> Task.Run(async ()=> await ShowDetail.InvokeAsync(arg.DataItem)))"
                    T="CebDetail"
                    DataNavigationMode="@DataGridNavigationMode.VirtualScrolling">
            <DxDataGridColumn Field="Op1" Caption="Opération 1" Visible="TypeGrille == CebTypeGrille.Grille" TextAlignment="@DataGridTextAlign.Center"></DxDataGridColumn>
            <DxDataGridColumn Field="Op2" Caption="Opération 2" Visible="TypeGrille == CebTypeGrille.Grille" TextAlignment="@DataGridTextAlign.Center"></DxDataGridColumn>
            <DxDataGridColumn Field="Op3" Caption="Opération 3" Visible="TypeGrille == CebTypeGrille.Grille" TextAlignment="@DataGridTextAlign.Center"></DxDataGridColumn>
            <DxDataGridColumn Field="Op4" Caption="Opération 4" Visible="TypeGrille == CebTypeGrille.Grille" TextAlignment="@DataGridTextAlign.Center"></DxDataGridColumn>
            <DxDataGridColumn Field="Op5" Caption="Opération 5" Visible="TypeGrille == CebTypeGrille.Grille" TextAlignment="@DataGridTextAlign.Center"></DxDataGridColumn>
            <DxDataGridColumn Field="Op3" Caption="Opération 5" Visible="TypeGrille == CebTypeGrille.Liste" TextAlignment="@DataGridTextAlign.Center">
                <DisplayTemplate>
                    @{
                        var lig = context as CebDetail;
                        <div>@lig.Op1</div>
                        <div>@lig.Op2</div>
                        <div>@lig.Op3</div>
                        <div>@lig.Op4</div>
                        <div>@lig.Op5</div>

                    }
                </DisplayTemplate>
            </DxDataGridColumn>

        </DxDataGrid>
    

    @code {
            DxDataGrid<CebDetail> dxgrille { get; set; }
        private CebTypeGrille _typegrille;
        [Parameter]
        public CebTypeGrille TypeGrille
        {
            get => _typegrille;
            set
            {
                if (_typegrille != value)
                {
                    _typegrille = value;
                    InvokeAsync(StateHasChanged);
                }
            }
        }

        [Parameter] public EventCallback<CebDetail> ShowDetail { get; set; }
        [Parameter] public IEnumerable<CebDetail> Details { get; set; }




        protected override void OnInitialized()
        {
            Details = new List<CebDetail>();
        }

    }
