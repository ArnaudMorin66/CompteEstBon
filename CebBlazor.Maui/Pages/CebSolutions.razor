@using CompteEstBon
@using SelectionType = Syncfusion.Blazor.Grids.SelectionType
@inject CebTirage tirage
<section>
    <div class="border border-secondary border-1 rounded bg-primary mb-1 mt-1" style="height: 32rem;">
        <SfGrid AllowSelection="true"
                DataSource="tirage.Solutions"
                EnableAltRow="true"
                GridLines="GridLine.Horizontal"
                Height="100%"
                Width="100%"
                ID="solutions"
                TValue="CebBase">
            <GridEvents OnRecordClick="async data => await ShowDetail.InvokeAsync(data.RowData)"
                        TValue="CebBase">
            </GridEvents>
            <GridSelectionSettings CellSelectionMode="CellSelectionMode.Box" Type="SelectionType.Single"></GridSelectionSettings>
            <GridTemplates>
                <EmptyRecordTemplate>
                    @if (tirage.Status == CebStatus.EnCours) {
                        <div class="position-absolute top-50 start-50 translate-middle">
                            <SfSpinner Visible=true Type="@SpinnerType.Fluent" Size="100" />
                        </div>
                    }
                </EmptyRecordTemplate>
            </GridTemplates>
            <GridColumns>
                @if (VueVerticale) {
                    <GridColumn TextAlign="TextAlign.Center">
                        <Template Context="data">
                            @{
                                var operations = (data as CebBase)!.Operations;
                                foreach (var operation in operations) {
                                    <div>@operation</div>
                                }
                            }
                        </Template>
                    </GridColumn>
                }
                else {
                    @for (var i = 0; i < 5; i++) {
                        var _i = i;
                        <GridColumn TextAlign="TextAlign.Center">
                            <Template Context="data">
                                @{
                                    var operations = (data as CebBase)!.Operations;
                                    if (_i < operations.Count)
                                        @operations[_i]
                                }
                            </Template>
                        </GridColumn>
                    }
                }
            </GridColumns>
        </SfGrid>
    </div>
</section>

@code {

#pragma warning disable CS8618
    [Parameter]
    public bool VueVerticale { get; set; }


    [Parameter]
    public EventCallback<CebBase> ShowDetail { get; set; }

    protected override void OnInitialized() {
        VueVerticale = true;
        base.OnInitialized();
    }

}